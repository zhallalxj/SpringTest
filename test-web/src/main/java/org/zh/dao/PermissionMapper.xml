<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zh.dao.PermissionMapper">
    <resultMap id="BaseResultMap" type="org.zh.bean.Permission">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="parentId" property="parentid" jdbcType="BIGINT"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="uri" property="uri" jdbcType="VARCHAR"/>
        <result column="permission_value" property="permissionValue" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, parentId, icon, uri, permission_value, type, level, create_time, modify_time
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.zh.bean.PermissionExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_permission
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="org.zh.bean.PermissionExample">
        delete from t_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="org.zh.bean.Permission">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_permission (name, parentId, icon,
        uri, permission_value, type,
        level, create_time, modify_time
        )
        values (#{name,jdbcType=VARCHAR}, #{parentid,jdbcType=BIGINT}, #{icon,jdbcType=VARCHAR},
        #{uri,jdbcType=VARCHAR}, #{permissionValue,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER},
        #{level,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="org.zh.bean.Permission">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="parentid != null">
                parentId,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="uri != null">
                uri,
            </if>
            <if test="permissionValue != null">
                permission_value,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="modifyTime != null">
                modify_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentid != null">
                #{parentid,jdbcType=BIGINT},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="uri != null">
                #{uri,jdbcType=VARCHAR},
            </if>
            <if test="permissionValue != null">
                #{permissionValue,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="org.zh.bean.PermissionExample" resultType="java.lang.Integer">
        select count(*) from t_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_permission
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.parentid != null">
                parentId = #{record.parentid,jdbcType=BIGINT},
            </if>
            <if test="record.icon != null">
                icon = #{record.icon,jdbcType=VARCHAR},
            </if>
            <if test="record.uri != null">
                uri = #{record.uri,jdbcType=VARCHAR},
            </if>
            <if test="record.permissionValue != null">
                permission_value = #{record.permissionValue,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.level != null">
                level = #{record.level,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyTime != null">
                modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_permission
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        parentId = #{record.parentid,jdbcType=BIGINT},
        icon = #{record.icon,jdbcType=VARCHAR},
        uri = #{record.uri,jdbcType=VARCHAR},
        permission_value = #{record.permissionValue,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=INTEGER},
        level = #{record.level,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="org.zh.bean.Permission">
        update t_permission
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentid != null">
                parentId = #{parentid,jdbcType=BIGINT},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="uri != null">
                uri = #{uri,jdbcType=VARCHAR},
            </if>
            <if test="permissionValue != null">
                permission_value = #{permissionValue,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null">
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.zh.bean.Permission">
    update t_permission
    set name = #{name,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=BIGINT},
      icon = #{icon,jdbcType=VARCHAR},
      uri = #{uri,jdbcType=VARCHAR},
      permission_value = #{permissionValue,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>